@page "/login"
@using DNPAssigment1.Data
@namespace LoginComponent


@inject AuthenticationStateProvider AuthenticationStateProvider
@inject NavigationManager NavigationManager

<AuthorizeView>
    <NotAuthorized>
        <div class="row">
            <div class="col-1">
                <label>Username: </label>
            </div>
            <div class="col-11">
                <input type="text" placeholder="username" @bind-value="username"/>
            </div>
        </div>
        <div class="row">
            <div class="col-1">
                <label>Password: </label>
            </div>
            <div class="col-11">
                <input type="password" placeholder="password" @bind-value="password"/>
            </div>
        </div>
        <div class="row">
            <div class="col-1">
                <div style="color:red">@errorMessage</div>
                <button class="btn btn-primary" @onclick="PerformLogin" href="">
                    Login
                </button>
            </div>
        </div>
    </NotAuthorized>
    <Authorized>
        <a href="" @onclick="PerformLogout">
            Log out
        </a>
    </Authorized>
</AuthorizeView>

@code {
    private string username;
    private string password;
    private string errorMessage;

    public async Task PerformLogin()
    {
        errorMessage = "";
        try
        {
            ((CustomAuthenticationStateProvider) AuthenticationStateProvider).ValidateLogin(username, password);
            username = "";
            password = "";
        }
        catch (Exception e)
        {
            errorMessage = e.Message;
        }
    }

    public async Task PerformLogout()
    {
        errorMessage = "";
        username = "";
        password = "";
        try
        {
            ((CustomAuthenticationStateProvider) AuthenticationStateProvider).Logout();
            NavigationManager.NavigateTo("/");
        }
        catch (Exception e)
        {
        }
    }

}